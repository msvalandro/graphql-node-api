{"version":3,"file":"/home/msvalandro/Documents/repo/graphql-node-api/src/graphql/ast/RequestedFields.ts","sources":["/home/msvalandro/Documents/repo/graphql-node-api/src/graphql/ast/RequestedFields.ts"],"names":[],"mappings":";;AAAA,gDAAgD;AAEhD,mCAA2C;AAE3C;IAEC,SAAS,CAAC,IAAwB,EAAE,OAA+C;QAElF,IAAI,MAAM,GAAa,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QAExD,IAAI,CAAC,OAAO;YAAE,OAAO,MAAM,CAAC;QAE5B,MAAM,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAK,CAAS,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QACvE,MAAM,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,mBAAU,CAAS,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAElF,OAAO,MAAM,CAAC;IACf,CAAC;CACD;AAbD,0CAaC","sourcesContent":["import * as graphqlFields from 'graphql-fields';\nimport { GraphQLResolveInfo, graphql } from 'graphql';\nimport { difference, union } from 'lodash';\n\nexport class RequestedFields {\n\n\tgetFields(info: GraphQLResolveInfo, options?: {keep?: string[], exclude?: string[]}): string[] {\n\n\t\tlet fields: string[] = Object.keys(graphqlFields(info));\n\n\t\tif (!options) return fields;\n\n\t\tfields = (options.keep) ? union<string>(fields, options.keep) : fields;\n\t\tfields = (options.exclude) ? difference<string>(fields, options.exclude) : fields;\n\n\t\treturn fields;\n\t}\n}"]}