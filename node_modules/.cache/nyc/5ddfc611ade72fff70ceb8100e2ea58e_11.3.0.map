{"version":3,"file":"/home/msvalandro/Documents/repo/graphql-node-api/src/app.ts","sources":["/home/msvalandro/Documents/repo/graphql-node-api/src/app.ts"],"names":[],"mappings":";;AAAA,mCAAmC;AACnC,+CAA+C;AAE/C,6CAAsC;AACtC,qCAA0B;AAC1B,iFAA4E;AAC5E,+EAA4E;AAC5E,mEAAgE;AAEhE;IAMC;QAEC,IAAI,CAAC,OAAO,GAAG,OAAO,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,EAAE,CAAC;IACb,CAAC;IAEO,IAAI;QAEX,IAAI,CAAC,eAAe,GAAG,IAAI,iCAAe,EAAE,CAAC;QAC7C,IAAI,CAAC,iBAAiB,GAAG,IAAI,qCAAiB,CAAC,gBAAE,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QACzE,IAAI,CAAC,UAAU,EAAE,CAAC;IACnB,CAAC;IAEO,UAAU;QAEjB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAC1B,6CAAoB,EAAE,EACtB,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;YAClB,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,gBAAE,CAAC;YAC1B,GAAG,CAAC,SAAS,CAAC,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,CAAC;YACpE,GAAG,CAAC,SAAS,CAAC,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;YACzD,IAAI,EAAE,CAAC;QACR,CAAC,EACD,WAAW,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YACrB,MAAM,EAAE,gBAAM;YACd,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa;YAChD,OAAO,EAAE,GAAG,CAAC,SAAS,CAAC;SACvB,CAAC,CAAC,CACH,CAAC;IACH,CAAC;CACD;AAED,kBAAe,IAAI,GAAG,EAAE,CAAC,OAAO,CAAC","sourcesContent":["import * as express from 'express';\nimport * as graphqlHTTP from 'express-graphql';\n\nimport schema from './graphql/schema';\nimport db from './models';\nimport { extractJwtMiddleware } from './middlewares/extract-jwt.middleware';\nimport { DataLoaderFactory } from './graphql/dataloaders/DataLoaderFactory';\nimport { RequestedFields } from './graphql/ast/RequestedFields';\n\nclass App {\n\n\tpublic express: express.Application;\n\tprivate dataLoaderFactory: DataLoaderFactory;\n\tprivate requestedFields: RequestedFields;\n\n\tconstructor() {\n\t\n\t\tthis.express = express();\n\t\tthis.init();\n\t}\n\n\tprivate init(): void {\n\n\t\tthis.requestedFields = new RequestedFields();\n\t\tthis.dataLoaderFactory = new DataLoaderFactory(db, this.requestedFields);\n\t\tthis.middleware();\n\t}\n\n\tprivate middleware(): void {\n\n\t\tthis.express.use('/graphql',\n\t\t\textractJwtMiddleware(),\n\t\t\t(req, res, next) => {\n\t\t\t\treq['context']['db'] = db;\n\t\t\t\treq['context']['dataloaders'] = this.dataLoaderFactory.getLoaders();\n\t\t\t\treq['context']['requestedFields'] = this.requestedFields;\n\t\t\t\tnext();\n\t\t\t},\n\t\t\tgraphqlHTTP((req) => ({\n\t\t\t\tschema: schema,\n\t\t\t\tgraphiql: process.env.NODE_ENV === 'development',\n\t\t\t\tcontext: req['context']\n\t\t\t}))\n\t\t);\n\t}\n}\n\nexport default new App().express;"]}