{"version":3,"file":"/home/msvalandro/Documents/repo/graphql-node-api/src/graphql/composable/verify-token.resolver.ts","sources":["/home/msvalandro/Documents/repo/graphql-node-api/src/graphql/composable/verify-token.resolver.ts"],"names":[],"mappings":";;AAAA,oCAAoC;AAIpC,6CAA+C;AAElC,QAAA,mBAAmB,GAC/B,CAAC,QAAoD,EAA8C,EAAE;IAEpG,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,OAAwB,EAAE,IAAI,EAAE,EAAE;QAEvD,MAAM,KAAK,GAAW,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,kBAAkB;QAEjH,OAAO,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,kBAAU,EAAE,CAAC,GAAG,EAAE,OAAY,EAAE,EAAE;YAC1D,IAAI,CAAC,GAAG,EAAE;gBACT,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;aAC7C;YAED,MAAM,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACJ,CAAC,CAAA;AACF,CAAC,CAAC","sourcesContent":["import * as jwt from 'jsonwebtoken';\nimport { GraphQLFieldResolver } from 'graphql';\nimport { ComposableResolver } from './composable.resolver';\nimport { ResolverContext } from '../../interfaces/ResolverContextInterface';\nimport { JWT_SECRET } from '../../utils/utils';\n\nexport const verifyTokenResolver: ComposableResolver<any, ResolverContext> = \n\t(resolver: GraphQLFieldResolver<any, ResolverContext>): GraphQLFieldResolver<any, ResolverContext> => {\n\n\t\treturn (parent, args, context: ResolverContext, info) => {\n\n\t\t\tconst token: string = context.authorization ? context.authorization.split(' ')[1] : undefined; // Bearer asdfasdf\n\t\t\n\t\t\treturn jwt.verify(token, JWT_SECRET, (err, decoded: any) => {\n\t\t\t\tif (!err) {\n\t\t\t\t\treturn resolver(parent, args, context, info);\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`${err.name}: ${err.message}`);\n\t\t\t});\n\t\t}\n\t};"]}