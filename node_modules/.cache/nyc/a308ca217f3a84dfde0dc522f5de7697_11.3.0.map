{"version":3,"file":"/home/msvalandro/Documents/repo/graphql-node-api/src/graphql/resources/token/token.resolvers.ts","sources":["/home/msvalandro/Documents/repo/graphql-node-api/src/graphql/resources/token/token.resolvers.ts"],"names":[],"mappings":";;AAAA,oCAAoC;AAGpC,gDAAkD;AAErC,QAAA,cAAc,GAAG;IAC7B,QAAQ,EAAE;QACT,WAAW,EAAE,CAAC,MAAM,EAAE,EAAC,KAAK,EAAE,QAAQ,EAAC,EAAE,EAAC,EAAE,EAAqB,EAAE,EAAE;YACpE,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC;gBACtB,KAAK,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC;gBACrB,UAAU,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC;aAC9B,CAAC,CAAC,IAAI,CAAC,CAAC,IAAkB,EAAE,EAAE;gBAC9B,IAAI,YAAY,GAAW,wCAAwC,CAAC;gBACpE,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,QAAQ,CAAC;oBAAE,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;gBAE7F,MAAM,OAAO,GAAG,EAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAC,CAAC;gBAEtC,OAAO;oBACN,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,kBAAU,CAAC;iBACpC,CAAC;YACH,CAAC,CAAC,CAAC;QACJ,CAAC;KACD;CACD,CAAC","sourcesContent":["import * as jwt from 'jsonwebtoken';\nimport { DbConnection } from \"../../../interfaces/DbConnectionInterface\";\nimport { UserInstance } from \"../../../models/UserModel\";\nimport { JWT_SECRET } from '../../../utils/utils';\n\nexport const tokenResolvers = {\n\tMutation: {\n\t\tcreateToken: (parent, {email, password}, {db}: {db: DbConnection}) => {\n\t\t\treturn db.User.findOne({\n\t\t\t\twhere: {email: email},\n\t\t\t\tattributes: ['id', 'password']\n\t\t\t}).then((user: UserInstance) => {\n\t\t\t\tlet errorMessage: string = 'Unauthorized, wrong email or password.';\n\t\t\t\tif (!user || !user.isPassword(user.get('password'), password)) throw new Error(errorMessage);\n\t\t\t\n\t\t\t\tconst payload = {sub: user.get('id')};\n\n\t\t\t\treturn {\n\t\t\t\t\ttoken: jwt.sign(payload, JWT_SECRET)\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t}\n};"]}