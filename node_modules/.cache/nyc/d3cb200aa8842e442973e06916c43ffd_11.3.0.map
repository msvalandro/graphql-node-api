{"version":3,"file":"/home/msvalandro/Documents/repo/graphql-node-api/src/models/UserModel.ts","sources":["/home/msvalandro/Documents/repo/graphql-node-api/src/models/UserModel.ts"],"names":[],"mappings":";;AACA,uCAA8D;AAsB9D,kBAAe,CAAC,SAA8B,EAAE,SAA8B,EAAa,EAAE;IAE5F,MAAM,IAAI,GACT,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE;QACxB,EAAE,EAAE;YACH,IAAI,EAAE,SAAS,CAAC,OAAO;YACvB,SAAS,EAAE,KAAK;YAChB,UAAU,EAAE,IAAI;YAChB,aAAa,EAAE,IAAI;SACnB;QACD,IAAI,EAAE;YACL,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC;YAC3B,SAAS,EAAE,KAAK;SAChB;QACD,KAAK,EAAE;YACN,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC;YAC3B,SAAS,EAAE,KAAK;YAChB,MAAM,EAAE,IAAI;SACZ;QACD,QAAQ,EAAE;YACT,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC;YAC3B,SAAS,EAAE,KAAK;YAChB,QAAQ,EAAE;gBACT,QAAQ,EAAE,IAAI;aACd;SACD;QACD,KAAK,EAAE;YACN,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC;gBACpB,MAAM,EAAE,MAAM;aACd,CAAC;YACF,SAAS,EAAE,IAAI;YACf,YAAY,EAAE,IAAI;SAClB;KACD,EAAE;QACF,SAAS,EAAE,OAAO;QAClB,KAAK,EAAE;YACN,YAAY,EAAE,CAAC,IAAkB,EAAE,OAAgC,EAAQ,EAAE;gBAC5E,MAAM,IAAI,GAAG,sBAAW,EAAE,CAAC;gBAC3B,IAAI,CAAC,QAAQ,GAAG,mBAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAC/C,CAAC;YACD,YAAY,EAAE,CAAC,IAAkB,EAAE,OAAgC,EAAQ,EAAE;gBAC5E,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;oBAC7B,MAAM,IAAI,GAAG,sBAAW,EAAE,CAAC;oBAC3B,IAAI,CAAC,QAAQ,GAAG,mBAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;iBAC9C;YACF,CAAC;SACD;KACD,CAAC,CAAC;IAEH,IAAI,CAAC,SAAS,GAAG,CAAC,MAAuB,EAAQ,EAAE,GAAE,CAAC,CAAC;IAEvD,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,CAAC,eAAuB,EAAE,QAAgB,EAAW,EAAE;QAClF,OAAO,sBAAW,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;IAC/C,CAAC,CAAC;IAEH,OAAO,IAAI,CAAC;AACb,CAAC,CAAC","sourcesContent":["import * as Sequelize from \"sequelize\";\nimport { genSaltSync, hashSync, compareSync } from 'bcryptjs';\nimport { BaseModelInterface } from '../interfaces/BaseModelInterface';\nimport { ModelsInterface } from \"../interfaces/ModelsInterface\";\n\nexport interface UserAttributes {\n\t\n\tid?: number;\n\tname?: string;\n\temail?: string;\n\tpassword?: string;\n\tphoto?: string;\n\tcreatedAt?: string;\n\tupdatedAt?: string;\n}\n\nexport interface UserInstance extends Sequelize.Instance<UserAttributes>, UserAttributes {\n\t\n\tisPassword(encodedPassword: string, password: string): boolean;\n}\n\nexport interface UserModel extends BaseModelInterface, Sequelize.Model<UserInstance, UserAttributes> {}\n\nexport default (sequelize: Sequelize.Sequelize, DataTypes: Sequelize.DataTypes): UserModel => {\n\n\tconst User: UserModel =\n\t\tsequelize.define('User', {\n\t\t\tid: {\n\t\t\t\ttype: DataTypes.INTEGER,\n\t\t\t\tallowNull: false,\n\t\t\t\tprimaryKey: true,\n\t\t\t\tautoIncrement: true\n\t\t\t},\n\t\t\tname: {\n\t\t\t\ttype: DataTypes.STRING(128),\n\t\t\t\tallowNull: false\n\t\t\t},\n\t\t\temail: {\n\t\t\t\ttype: DataTypes.STRING(128),\n\t\t\t\tallowNull: false,\n\t\t\t\tunique: true\n\t\t\t},\n\t\t\tpassword: {\n\t\t\t\ttype: DataTypes.STRING(128),\n\t\t\t\tallowNull: false,\n\t\t\t\tvalidate: {\n\t\t\t\t\tnotEmpty: true\n\t\t\t\t}\n\t\t\t},\n\t\t\tphoto: {\n\t\t\t\ttype: DataTypes.BLOB({\n\t\t\t\t\tlength: 'long'\n\t\t\t\t}),\n\t\t\t\tallowNull: true,\n\t\t\t\tdefaultValue: null\n\t\t\t}\n\t\t}, {\n\t\t\ttableName: 'users',\n\t\t\thooks: {\n\t\t\t\tbeforeCreate: (user: UserInstance, options: Sequelize.CreateOptions): void => {\n\t\t\t\t\tconst salt = genSaltSync();\n\t\t\t\t\tuser.password = hashSync(user.password, salt);\n\t\t\t\t},\n\t\t\t\tbeforeUpdate: (user: UserInstance, options: Sequelize.CreateOptions): void => {\n\t\t\t\t\tif (user.changed('password')) {\n\t\t\t\t\t\tconst salt = genSaltSync();\n\t\t\t\t\t\tuser.password = hashSync(user.password, salt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tUser.associate = (models: ModelsInterface): void => {};\n\n\t\tUser.prototype.isPassword = (encodedPassword: string, password: string): boolean => {\n\t\t\treturn compareSync(password, encodedPassword);\n\t\t};\n\n\treturn User;\n};"]}