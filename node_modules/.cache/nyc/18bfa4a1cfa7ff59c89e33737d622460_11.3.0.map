{"version":3,"file":"/home/msvalandro/Documents/repo/graphql-node-api/src/graphql/composable/auth.resolver.ts","sources":["/home/msvalandro/Documents/repo/graphql-node-api/src/graphql/composable/auth.resolver.ts"],"names":[],"mappings":";;AAGA,mEAA8D;AAEjD,QAAA,YAAY,GACxB,CAAC,QAAoD,EAA8C,EAAE;IAEpG,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,OAAwB,EAAE,IAAI,EAAE,EAAE;QAEvD,IAAI,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,aAAa,EAAE;YAC9C,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;SAC7C;QAED,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;IACtD,CAAC,CAAC;AACH,CAAC,CAAC;AAEU,QAAA,aAAa,GAAG,CAAC,oBAAY,EAAE,2CAAmB,CAAC,CAAC","sourcesContent":["import { ComposableResolver } from './composable.resolver';\nimport { ResolverContext } from '../../interfaces/ResolverContextInterface';\nimport { GraphQLFieldResolver } from 'graphql';\nimport { verifyTokenResolver } from './verify-token.resolver';\n\nexport const authResolver: ComposableResolver<any, ResolverContext> = \n\t(resolver: GraphQLFieldResolver<any, ResolverContext>): GraphQLFieldResolver<any, ResolverContext> => {\n\t\t\n\t\treturn (parent, args, context: ResolverContext, info) => {\n\n\t\t\tif (context.authUser || context.authorization) {\n\t\t\t\treturn resolver(parent, args, context, info);\n\t\t\t}\n\n\t\t\tthrow new Error('Unauthorized! Token not provided.');\n\t\t};\n\t};\n\nexport const authResolvers = [authResolver, verifyTokenResolver];"]}